{"version":3,"file":"static/js/133.8534342c.chunk.js","mappings":"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","sources":["components/ServiceAPI/api.js","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from '../Assistants/image01.jpeg';\nimport noPoster from '../Assistants/img002.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2123fea73978ac77fe6a3f347cf7ced6',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPoster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : noPoster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: poster ? IMG_URL + poster : noPoster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"FormDiv\":\"Movies_FormDiv__CEYk8\",\"Form\":\"Movies_Form__rKqDz\",\"Input\":\"Movies_Input__ylMgS\",\"MovButton\":\"Movies_MovButton__RXMJ-\",\"MovList\":\"Movies_MovList__+K66U\",\"MovItem\":\"Movies_MovItem__wmOm2\",\"MovImg\":\"Movies_MovImg__QqBrY\",\"MovTitle\":\"Movies_MovTitle__a0Rsf\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from '../../components/ServiceAPI/api';\nimport css from './Movies.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <div className={css.FormDiv}>\n        <form className={css.Form} onSubmit={handleSubmit}>\n          <input\n            className={css.Input}\n            type=\"text\"\n            value={query}\n            onChange={onChange}\n          />\n          <button className={css.MovButton} type=\"submit\">\n            search\n          </button>\n        </form>\n      </div>\n      {movies.length > 0 && (\n        <ul className={css.MovList}>\n          {movies.map(({ id, title, poster }) => (\n            <li className={css.MovItem} key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                <img className={css.MovImg} src={poster} alt={title} />\n                <div className={css.MovTitle}>\n                  <h3>{title}</h3>\n                </div>\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","noPoster","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","photo","profile_path","noPhoto","fetchMovieReviews","_ref10","_ref11","author","content","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","e","response","preventDefault","sent","_jsxs","_Fragment","children","_jsx","className","css","onSubmit","type","value","onChange","target","length","NavLink","to","state","from","src","alt"],"sourceRoot":""}