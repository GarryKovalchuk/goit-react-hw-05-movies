{"version":3,"file":"static/js/211.a987207c.chunk.js","mappings":"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","sources":["components/ServiceAPI/api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDatails.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from '../Assistants/image01.jpeg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2123fea73978ac77fe6a3f347cf7ced6',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"DetBtn\":\"MovieDetails_DetBtn__eEhTI\",\"DetContainer\":\"MovieDetails_DetContainer__0MSp0\",\"DetImg\":\"MovieDetails_DetImg__ISCBQ\",\"DetInfo\":\"MovieDetails_DetInfo__a5w+5\",\"DetTitle\":\"MovieDetails_DetTitle__QRBZU\",\"DetAddInfo\":\"MovieDetails_DetAddInfo__9qNZ+\",\"DetList\":\"MovieDetails_DetList__xw-jI\"};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../components/ServiceAPI/api';\nimport css from './MovieDetails.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { poster, title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <div>\n      <button className={css.DetBtn} type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </button>\n      {movie && (\n        <div>\n          <div className={css.DetContainer}>\n            <img className={css.DetImg} src={poster} alt={title} />\n            <div className={css.DetInfo}>\n              <h2 className={css.DetTitle}>\n                {title} ({releaseYear})\n              </h2>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </div>\n          </div>\n\n          <h3 className={css.DetAddInfo}>Additional information</h3>\n\n          <ul className={css.DetList}>\n            <li>\n              <NavLink to={'cast'} state={{ from: location?.state?.from }}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <styled\n                className={css.InfoLink}\n                to={'reviews'}\n                state={{ from: location?.state?.from }}\n              >\n                Reviews\n              </styled>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","photo","profile_path","noPhoto","fetchMovieReviews","_ref10","_ref11","author","content","_location$state$from","_location$state","_location$state2","_location$state3","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","_jsxs","children","_jsx","className","css","type","onClick","src","alt","join","NavLink","to","Outlet"],"sourceRoot":""}